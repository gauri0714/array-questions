2101641520062_CS_AI_2B
Gauri Gupta

question 1 Arthimetic progression[GFG]
approach 1:
class Solution:
    
    def checkIsAP(self, arr, n):
        # code here
        arr.sort()
        f=0
        d=arr[1]-arr[0]
        for i in range(len(arr)-1):
            if(arr[i+1]-arr[i]!=d):
                f=1
        if f==0:
            return True
        else:
            return False
       
approach 2:
class Solution:
    
    def checkIsAP(self, arr, n):
        # code here
        first=9
        sec=9
        for i in range(n):
            if arr[i]<first:
                sec=first
                first=arr[i]
            else:
                sec=min(sec,arr[i])
            a=first
            d=sec
        for i in range(1,n+1):
            term=a+(i-1)*d
            if term not in arr:
                return False
        return True
        
question 2:Sort Colors[Leetcode]
approach 1-      
zero,one,two=0,0,0
        k=0
        for i in nums:
            if i==0:
                zero+=1
            if i==1:
                one+=1
            if i==2:
                two+=1
        print(zero,one,two)
        while(zero!=0):
            nums[k]=0
            zero-=1
            k+=1
        while(one!=0):
            nums[k]=1
            one-=1
            k+=1
        while(two!=0):
            nums[k]=2
            two-=1
            k+=1
        return nums

approach 2-
        low=0
        mid=0
        high=len(nums)-1
        while mid<=high :
            if nums[mid]==0:
                nums[mid],nums[low]=nums[low],nums[mid]
                mid+=1
                low+=1
            elif nums[mid]==1:
                mid+=1
            else:
                nums[mid],nums[high]=nums[high],nums[mid]
                high-=1
        return nums       
